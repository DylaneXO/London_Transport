CREATE DATABASE tfl;
USE tfl;
CREATE TABLE stations (
station_id INTEGER PRIMARY KEY NOT NULL auto_increment,
station_name VARCHAR(55) NOT NULL,
zone INTEGER NOT NULL,
latitude FLOAT(6),
longitude FLOAT(6)
);

CREATE TABLE line (
line_id INTEGER PRIMARY KEY NOT NULL auto_increment,
line_name VARCHAR(55) NOT NULL,
colour VARCHAR(55),
operational_status BOOLEAN
);

CREATE TABLE station_lines (
station_id INTEGER,
line_id INTEGER
);
ALTER TABLE station_lines
ADD CONSTRAINT fk_station_lines_station_id
FOREIGN KEY (station_id) REFERENCES stations(station_id);
;
ALTER TABLE station_lines
ADD CONSTRAINT fk_station_lines_line_id
FOREIGN KEY (line_id) REFERENCES line(line_id)
;

CREATE TABLE journeys (
journey_id INTEGER PRIMARY KEY NOT NULL auto_increment,
origin_station_id INTEGER, # forgein key referencing stations,
destination_station_id INTEGER,
journey_time TIME,
fare FLOAT(2),
journey_date DATE,
ticket_type VARCHAR(55)
);
ALTER TABLE journeys
RENAME COLUMN origin_station_id to station_id
;

ALTER TABLE journeys
ADD CONSTRAINT fk_journeys_origin_station_id
FOREIGN KEY (station_id) REFERENCES stations(station_id)
;

ALTER TABLE journeys
ADD CONSTRAINT fk_journeys_destination_station_id
FOREIGN KEY (destination_station_id) REFERENCES stations(station_id)
;

CREATE TABLE passenger_count (
station_id INTEGER,
date_of_count DATE,
time_of_count TIME,
passenger_count INTEGER
);

ALTER TABLE passenger_count
ADD CONSTRAINT fk_passenger_count_station_id
FOREIGN KEY (station_id) REFERENCES stations(station_id)
;

INSERT INTO stations (station_name, zone, latitude, longitude)
VALUES 
('Waterloo', 1, 51.503297, -0.113109),
('Camden Town', 2, 51.539969, -0.142452),
('Bank', 1, 51.513347, -0.089),
('Stratford', 3, 51.541893, -0.003397),
('Holborn', 1, 51.517236, -0.119841),
('Brixton', 2, 51.463297, -0.114183),
('Barbican', 1, 51.520215, -0.097722),
('Wimbledon', 3, 51.421274, -0.206383),
('Ealing Broadway', 3, 51.51484, -0.301752),
('Tottenham Court Road', 1, 51.516211, -0.13111),
('Whitechapel', 2, 51.519467, -0.059757),
('Aldgate', 1, 51.514342, -0.075627),
('Angel', 1, 51.532968, -0.105581),
('Shepherds Bush', 2, 51.504532, -0.218519),
('Stockwell', 2, 51.472159,-0.122846),
('West Ham', 3, 51.528488, 0.005431),
('Clapham Common', 2, 51.461803, -0.138315),
('East Finchley',3, 51.587332, -0.164744),
('West Hampstead', 2, 51.547466, -0.191185),
('South Wimbledon', 3, 51.41536, -0.191975)
;

INSERT INTO line (line_name, colour, operational_status)
VALUES
('Bakerloo', 'brown', 1),
('Central', 'red', 1),
('Circle', 'yellow',1 ),
('District', 'green', 0),
('Hammersmith & City', 'pink', 0),
('Jubilee', 'grey', 1),
('Metropolitan','maroon', 1),
('Northen', 'black', 1),
('Piccadilly', 'dark blue', 1),
('Victoria', 'light blue', 1),
('Waterloo & City', 'turquoise', 1)
;

DELETE FROM stations WHERE station_id > 20;

INSERT INTO station_lines (station_id, line_id)
VALUES
(1,1),
(1,6),
(1,8),
(1,11),
(2,8),
(3,2),
(3,3),
(3,4),
(3,8),
(3,11),
(4,6),
(4,2),
(5,2),
(5,9),
(6,10),
(7,5),
(7,2),
(7,7),
(8,4),
(9,4),
(9,2),
(10,2),
(10,8),
(11,4),
(11,5),
(12,3),
(12,7),
(13,8),
(14,2),
(15,8),
(15,10),
(16,6),
(16,4),
(16,5),
(17,8),
(18,8),
(19,6),
(20,8)
;
INSERT INTO journeys (origin_station_id, destination_station_id, journey_time, fare, journey_date, ticket_type, fare_type)
VALUES
(1,2,'14:25:34',2.40,'2024-04-16','contactless card','off peak'),
(3,4,'14:35:30',2.40,'2024-04-16','oyster card','off peak'),
(5,6,'14:36:19',2.40,'2024-04-16','oyster card','off peak'),
(7,8,'14:37:19',2.90,'2024-04-16', 'contactless card','off peak'),
(9,10,'14:37:25',2.40,'2024-04-16', 'oyster card','off peak'),
(11,12,'14:37:47',2.40,'2024-04-16', 'contactless card','off peak'),
(13,14,'14:39:37',2.40,'2024-04-16', 'contactless card','off peak'),
(15,16,'14:40:15',3.10,'2024-04-16', 'oyster card', 'off peak'),
(17,18,'14:40:50',2.40,'2024-04-16','contactless card','off peak'),
(19,20,'14:41:47',3.10,'2024-04-16', 'contactless card','off peak'),
(2,3,'14:44:20',2.40,'2024-04-16', 'contactless card','off peak'),
(4,5,'14:45:02',2.40,'2024-04-16', 'contactless card','off peak'),
(6,7,'14:49:25',2.40,'2024-04-16', 'oyster card','off peak'),
(8,9,'14:51:02',2.80,'2024-04-16', 'contactless card','off peak'),
(10,11,'14:54:32',2.40,'2024-04-16','contactless card','off peak'),
(12,13,'14:56:47',2.40,'2024-04-16', 'oyster card','off peak'),
(14,15,'14:56:52',2.40,'2024-04-16', 'contactless card','off peak'),
(16,17,'14:57:47',3.10,'2024-04-16', 'contactless card','off peak'),
(18,19,'14:59:47',2.40,'2024-04-16', 'oyster card','off peak'),
(20,1,'15:01:32',3.10,'2024-04-16', 'contactless card','off peak')
;

ALTER TABLE journeys
ADD fare_type VARCHAR(55);

TRUNCATE journeys;

ALTER TABLE passenger_count
DROP COLUMN time_of_count
;
INSERT INTO passenger_count (station_id, date_of_count, passenger_count)
VALUES
(12,'2022-04-16',10843),
(3,'2022-04-16',10962),
(7,'2022-04-16',3329),
(6,'2022-04-16',27094),
(2,'2022-04-16',24576),
(17,'2022-04-16',5806),
(15,'2022-04-16',8788),
(19,'2022-04-16',7456),
(11,'2022-04-16',4792),
(9,'2022-04-16',13939),
(18,'2022-04-16',3707),
(20,'2022-04-16',2286),
(16,'2022-04-16',4170),
(4,'2022-04-16',64669),
(10,'2022-04-16',31865),
(8,'2022-04-16', 0)
;

SELECT *
FROM stations
INNER JOIN passenger_count ON stations.station_id = passenger_count.station_id;

CREATE OR REPLACE VIEW Zone_1_Stations AS
SELECT station_name, zone, line_name, colour
  FROM station_lines
  INNER JOIN stations
  ON station_lines.station_id = stations.station_id
  INNER JOIN line
  ON station_lines.line_id = line.line_id
  WHERE zone=1
  ;
INSERT INTO station_lines (station_id, line_id)
VALUES
(3, 11)
;
  
SET sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));

SELECT 
station_id,
date_of_count,
passenger_count,
(SELECT AVG(passenger_count) FROM passenger_count WHERE date_of_count = '2022-04-16') AS avg_passenger_count
FROM 
    passenger_count
WHERE 
    date_of_count = '2022-04-16';
  
  
DELIMITER //

CREATE FUNCTION GetAveragePassengerCount(
    station_id_in INTEGER,
    date_of_count_in DATE
) RETURNS FLOAT
BEGIN
    DECLARE avg_passenger_count FLOAT;

    -- Calculate average passenger count for the specified station and date
    SELECT AVG(passenger_count) INTO avg_passenger_count
    FROM passenger_count
    WHERE station_id = station_id_in
    AND date_of_count = date_of_count_in;

    RETURN avg_passenger_count;
END //

DELIMITER ;

DELIMITER //
CREATE PROCEDURE station_name_id ()
BEGIN
SELECT station_name, station_id FROM stations;
END //

CREATE TRIGGER update_passenger_count
AFTER
UPDATE
ON passenger_count
FOR EACH ROW
UPDATE passenger_count SET station_id=new.station_id,
date_of_count=new.date_of_count,
passenger_count=new.passenger_count
;

DELIMITER //
CREATE EVENT tube_closing
ON SCHEDULE EVERY 1 DAY
STARTS '2024-04-16 00:30:00'
DO
BEGIN
    UPDATE line
    SET operational_status = 0;
END;

DELIMITER //

CREATE EVENT tube_opening
ON SCHEDULE EVERY 1 DAY
STARTS '2024-04-16 05:00:00'
DO
BEGIN
    UPDATE line
    SET operational_status = 1;
END;

CREATE OR REPLACE VIEW Zone_2_Stations AS
SELECT s.zone, l.line_name, l.colour, COUNT(*) AS station_count
FROM station_lines sl
INNER JOIN stations s ON sl.station_id = s.station_id
INNER JOIN line l ON sl.line_id = l.line_id
WHERE s.zone = 2
GROUP BY s.zone, l.line_name, l.colour;






